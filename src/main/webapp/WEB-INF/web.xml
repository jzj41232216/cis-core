<?xml version="1.0" encoding="UTF-8"?>
<web-app
    xmlns="http://java.sun.com/xml/ns/j2ee"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"
    version="2.4">
  <display-name>CIS</display-name>

  <!--Log4j configuration start-->
  <listener>
    <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
  </listener>
  <context-param>
    <param-name>log4jConfigLocation</param-name>
    <param-value>classpath:log4j.properties</param-value>
  </context-param>
  <!--Log4j configuration end-->
  
  <!--Spring MVC configuration start-->
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>

  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>
      classpath:spring/infrastructure-persistence.xml
      classpath:spring/interfaces.xml
    </param-value>
  </context-param>

  <servlet>
    <servlet-name>spring</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
  </servlet>

  <servlet-mapping>
    <servlet-name>spring</servlet-name>
    <url-pattern>/</url-pattern>
  </servlet-mapping>

  <!--Spring MVC configuration end-->
  
  <!-- Character Encoding filter -->  
  <filter>  
      <filter-name>encodingFilter</filter-name>  
      <filter-class>  
          org.springframework.web.filter.CharacterEncodingFilter   
      </filter-class>  
      <init-param>  
          <param-name>encoding</param-name>  
          <param-value>UTF-8</param-value>  
      </init-param>  
      <init-param> 
            <param-name>forceEncoding</param-name> 
            <param-value>true</param-value> 
        </init-param> 
  </filter> 
  <!--Hibernate Open Session in View Filter-->  
    <!-- 如果在应用中没有使用OpenSessionInViewFilter或者OpenSessionInViewInterceptor，
    session会在transaction结束后关闭。在这里设置了，就能够在jsp中使用session，最主要是能够使用延时加载-->  
    <filter>  
        <filter-name>hibernateFilter</filter-name>  
        <filter-class>  
            org.springframework.orm.hibernate3.support.OpenSessionInViewFilter   
        </filter-class>  
    </filter>  
       
    <filter-mapping>  
        <filter-name>encodingFilter</filter-name>  
        <url-pattern>/*</url-pattern>  
    </filter-mapping>  
    <filter-mapping>  
        <filter-name>hibernateFilter</filter-name>  
        <url-pattern>/*</url-pattern>  
    </filter-mapping> 
    <!-- 扩展spring bean的作用域有request,session,global session等-->  
    <listener>  
        <listener-class>  
            org.springframework.web.context.request.RequestContextListener   
        </listener-class>  
    </listener>  
  
  
   <!--Mule将springmvc做为父容器，必须在spring启动后加载  -->
  <!--Mule configuration (Mule format)
  <context-param>
    <param-name>org.mule.config</param-name>
    <param-value>mule/loanbroker-bpm/mule-config.xml</param-value>
  </context-param>
  <listener>
    <listener-class>org.mule.config.builders.MuleXmlBuilderContextListener</listener-class>
  </listener>
  <servlet>
    <servlet-name>muleServlet</servlet-name>
    <servlet-class>org.mule.transport.servlet.MuleReceiverServlet</servlet-class>
    <load-on-startup>100</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>muleServlet</servlet-name>
    <url-pattern>/service/*</url-pattern>
  </servlet-mapping>
  -->
  <!--Mule configuration end-->
  
  <jsp-config>
    <jsp-property-group>
      <url-pattern>*.jsp</url-pattern>
      <include-prelude>/WEB-INF/jspf/include.jspf</include-prelude>
      <trim-directive-whitespaces>true</trim-directive-whitespaces>
    </jsp-property-group>
  </jsp-config>

</web-app>
